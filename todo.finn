/* vim: set filetype=finn: */

todo
====

prompt [1]
----------

- | When we ported the compiler to being self-hosted, we kept all the
  | identifier names the same as the old Lua implementation, (using
  | camelCase) but what we really want is to use kebab-case everywhere
  | we can.
  |
  | This applies to everything in the compiler except the public API,
  | (the mod table in the src/fennel.fnl file) which we can't change
  | for compatibility reasons.
  |
  | This can be done one file at a time for the most part. If anyone
  | wants to get started hacking on the compiler, this could be a good
  | way to dip your toe in the water since it's very straightforward
  | but it will touch a lot of the code in simple ways.
  |
  | Note that changing the name of locals can be done in a way that just
  | affects a single file, but when changing the module exports at the
  | bottom of the file, the consumers of that module will need to be
  | updated as well.

camelCase targets
-----------------

/src/fennel.fnl
- :allowedGlobals [CHECK]
- :compileStream [CHECK]
- :compileString [CHECK]
- :loadCode [CHECK]
- :macroLoaded [CHECK]
- :makeSearcher [CHECK]
- :moduleName [CHECK]
- :searchModule [CHECK]
- :stringStream [CHECK]
- :useMetadata [CHECK]
- compiler.compileStream [CHECK]
- compiler.compileString [CHECK]
- compiler.globalMangling [CHECK]
- compiler.globalUnmangling [CHECK]
- compiler.makeScope [CHECK]
- opts.allowedGlobals [CHECK]
- parser.stringStream [CHECK]
- specials.currentGlobalNames [CHECK]
- specials.loadCode [CHECK]
- specials.macroLoaded [CHECK]
- specials.makeCompilerEnv [CHECK]
- specials.makeSearcher [CHECK]
- specials.searchModule [CHECK]
- specials.wrapEnv [CHECK]
- utils.fennelModule [CHECK]

/src/launcher.fnl
- fennel.compileString
- fennel.make_searcher
- options.allowedGlobals
- options.checkUnusedLocals
- options.no_searcher
- options.readChunk
- options.registerCompleter
- options.requireAsInclude
- options.requireAsInclude
- options.useMetadata
- parser-state.stackSize

/src/fennel/binary.fnl
- fennel.compileString [CHECK]

/src/fennel/compiler.fnl
- allowedGlobals [CHECK]
- applyManglings [CHECK]
- assertCompile [CHECK]
- checkBindingValid [CHECK]
- combineParts [CHECK]
- compileStream [CHECK]
- compileString [CHECK]
- compileTopTarget [CHECK]
- declareLocal [CHECK]
- doQuote [CHECK]
- entryTransform [CHECK]
- fennelSourcemap [CHECK]
- flattenChunk [CHECK]
- flattenChunkCorrelated [CHECK]
- globalAllowed [CHECK]
- globalMangling [CHECK]
- globalUnmangling [CHECK]
- handleCompileOpts [CHECK]
- inMacroModule [CHECK]
- isLocal [CHECK]
- isReference [CHECK]
- keepSideEffects [CHECK]
- kvLen [CHECK]
- lastLine [CHECK]
- leftNames [CHECK]
- localMangling [CHECK]
- mainChunk [CHECK]
- makeMetadata [CHECK]
- makeScope [CHECK]
- makeShortSrc [CHECK]
- methodToCall [CHECK]
- mixedConcat [CHECK]
- multiSymParts [CHECK]
- multiSymParts.multiSymMethodCall [CHECK]
- newAST [CHECK]
- newChunk [CHECK]
- newManglings [CHECK]
- oldGlobals [CHECK]
- oldScope [CHECK]
- opts.requireAsInclude [CHECK]
- parser.stringStream [CHECK]
- parts.multiSymMethodCall [CHECK]
- requireInclude [CHECK]
- serializeString [CHECK]
- serializeSubst [CHECK]
- short_src [CHECK]
- symbolToExpression [CHECK]
- tableWithMethod [CHECK]
- tempManglings [CHECK]
- utils.debugOn [CHECK]
- utils.isExpr [CHECK]
- utils.isList [CHECK]
- utils.isMultiSym [CHECK]
- utils.isQuoted [CHECK]
- utils.isSym [CHECK]
- utils.isTable [CHECK]
- utils.isValidLuaIdentifier [CHECK]
- utils.isVarg [CHECK]
- utils.luaKeywords [CHECK]
- utils.root:setReset [CHECK]
- writeOtherValues [CHECK]

/src/fennel/friend.fnl
- parseError [CHECK]

/src/fennel/macros.fnl
- fennel.compileString [CHECK]

/src/fennel/parser.fnl
- :stackSize [CHECK]
- forceNumber [CHECK]
- loadFn [CHECK]
- numberWithStrippedUnderscores [CHECK]
- parseError [CHECK]
- parseStream [CHECK]
- parserState [CHECK]
- stringStream [CHECK]
- utils.isSym [CHECK]
- whitespaceSinceDispatch [CHECK]

/src/fennel/repl.fnl
- :moduleName [CHECK]
- :useMetadata [CHECK]
- compiler.makeScope [CHECK]
- options.saveLocals [CHECK]
- opts.allowedGlobals [CHECK]
- opts.moduleName [CHECK]
- opts.onError [CHECK]
- opts.onValues [CHECK]
- opts.readChunk [CHECK]
- opts.registerCompleter [CHECK]
- opts.useMetadata [CHECK]
- parser-state.stackSize [CHECK]
- specials.currentGlobalNames [CHECK]
- specials.loadCode [CHECK]
- utils.wrapEnv [CHECK]

/src/fennel/specials.fnl
- :allowedGlobals [CHECK]
- :useMetadata [CHECK]
- addMacros [CHECK]
- argList [CHECK]
- argNameList [CHECK]
- argStr [CHECK]
- bindVars [CHECK]
- bindingSym [CHECK]
- bodyOpts [CHECK]
- chainOp [CHECK]
- compileBody [CHECK]
- compileDo [CHECK]
- compiler.applyManglings [CHECK]
- compiler.declareLocal [CHECK]
- compiler.doQuote [CHECK]
- compiler.globalMangling [CHECK]
- compiler.globalUnmangling [CHECK]
- compiler.keepSideEffects [CHECK]
- compiler.makeScope [CHECK]
- compiler.requireInclude [CHECK]
- compiler.symbolToExpression [CHECK]
- condLine [CHECK]
- currentGlobalNames [CHECK]
- defineArithmeticSpecial [CHECK]
- defineComparatorSpecial [CHECK]
- defineUnarySpecial [CHECK]
- destructureBinding [CHECK]
- doScope [CHECK]
- docSpecial [CHECK]
- elseBranch [CHECK]
- evalCompiler [CHECK]
- fChunk [CHECK]
- fScope [CHECK]
- fnName [CHECK]
- getArgName [CHECK]
- hasElse [CHECK]
- innerTail [CHECK]
- innerTarget [CHECK]
- isLocalFn [CHECK]
- lastBuffer [CHECK]
- loadCode [CHECK]
- loadMacros [CHECK]
- luaName [CHECK]
- macroGlobals [CHECK]
- macroLoaded [CHECK]
- makeCompilerEnv [CHECK]
- makeSearcher [CHECK]
- maxUsed [CHECK]
- metaFields [CHECK]
- metaStr [CHECK]
- multi.multiSymMethodCall [CHECK]
- newManglings [CHECK]
- nextBuffer [CHECK]
- nodotModule [CHECK]
- oldFirst [CHECK]
- outerTail [CHECK]
- outerTarget [CHECK]
- paddedOp [CHECK]
- parentNode [CHECK]
- parser.stringStream [CHECK]
- pkgConfig [CHECK]
- preSyms [CHECK]
- rangeArgs [CHECK]
- searchModule [CHECK]
- specialOrMacro [CHECK]
- subChunk [CHECK]
- subScope [CHECK]
- targetExprs [CHECK]
- thisScope [CHECK]
- unaryPrefix [CHECK]
- utils.fennelModule [CHECK]
- utils.fennelModule.dofile [CHECK]
- utils.fennelModule.path [CHECK]
- utils.isList [CHECK]
- utils.isMultiSym [CHECK]
- utils.isSequence [CHECK]
- utils.isSym [CHECK]
- utils.isTable [CHECK]
- utils.isValidLuaIdentifier [CHECK]
- utils.isVarg [CHECK]
- utils.propagateOptions [CHECK]
- utils.root.options.moduleName [CHECK]
- utils.root.options.requireAsInclude [CHECK]
- utils.root.options.useMetadata [CHECK]
- utils.walkTree [CHECK]
- valNames [CHECK]
- wrapEnv [CHECK]
- zeroArity [CHECK]

/src/fennel/utils.fnl
- :allowedGlobals [CHECK]
- :useMetadata [CHECK]
- EXPR_MT [CHECK]
- LIST_MT [CHECK]
- SEQUENCE_MARKER [CHECK]
- SEQUENCE_MT [CHECK]
- SYMBOL_MT [CHECK]
- allpairsNext [CHECK]
- customIterator [CHECK]
- debugOn [CHECK]
- isExpr [CHECK]
- isList [CHECK]
- isMultiSym [CHECK]
- isQuoted [CHECK]
- isSequence [CHECK]
- isSym [CHECK]
- isTable [CHECK]
- isValidLuaIdentifier [CHECK]
- isVarg [CHECK]
- lastChar [CHECK]
- listToString [CHECK]
- luaKeywords [CHECK]
- nextState [CHECK]
- nilSym [CHECK]
- parts.multiSymMethodCall [CHECK]
- propagateOptions [CHECK]
- propagatedOptions [CHECK]
- root.setReset [CHECK]
- walkTree [CHECK]


******************************************************************************

[1]: https://github.com/bakpakin/Fennel/issues/310
